{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifListItem.js","components/GifList.js","hooks/useFetchGifs.js","App.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","original","GifListItem","className","src","alt","GifList","loading","state","setState","useEffect","then","useFetchGifs","image","App","ReactDOM","render","document","getElementById"],"mappings":"mMA4BeA,EAzBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACtB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACC,mCACC,sBAAMC,SATa,SAACC,GACrBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC9BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,KACRO,QAAQC,IAAR,4BAIN,SACC,uBAAOC,KAAK,OAAOC,MAAOX,EAAYY,SAdf,SAACT,GAC1BF,EAAcE,EAAEU,OAAOF,e,+BCPZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UACrDH,GAFqB,+DAICI,MAAMF,GAJP,cAIhBG,EAJgB,gBAKCA,EAASC,OALV,uBAKdC,EALc,EAKdA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACtB,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,SAASZ,QAVL,kBAafM,GAbe,4CAAH,sDCWLO,EATK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACC,sBAAKc,UAAU,OAAf,UACC,4BAAIJ,IACJ,qBAAKK,IAAKf,EAAKgB,IAAKN,QCaRO,EAfC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAClB,ECH2B,SAACA,GAC5B,MAA0BhB,mBAAS,CAClCuB,KAAM,GACNa,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACTxB,EAAQC,GAAUwB,MAAK,SAACd,GACvBY,EAAS,CACRf,KAAMG,EACNU,SAAS,SAGT,CAACpB,IAEGqB,EDZ2BI,CAAazB,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QACtB,OACC,qCACC,6BAAKpB,IACJoB,GAAW,cACZ,qBAAKJ,UAAU,8CAAf,SACEH,EAAOJ,KAAI,SAACiB,GACZ,OAAO,cAAC,EAAD,eAAgCA,GAAdA,EAAMf,aEYrBgB,EArBH,WACX,MAAoC3C,mBAAS,CAAC,mBAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAMA,OACC,qCACC,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACES,EAAWiB,KAAI,SAACT,GAChB,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCZ1B4B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.84187e12.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories((categories) => [inputValue, ...categories]);\r\n\t\t\tsetInputValue('');\r\n\t\t} else console.log(`Agregar un valor valido`);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n\t\tcategory\r\n\t)}&limit=10&api_key=6U8zpTUGZn6UTOgrlgcX9JrXm0IOVTTi`;\r\n\tconst response = await fetch(url);\r\n\tconst { data } = await response.json();\r\n\tconst gifs = data.map((img) => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images.original.url,\r\n\t\t};\r\n\t});\r\n\treturn gifs;\r\n};\r\n","import React from 'react';\r\n\r\nconst GifListItem = ({ id, title, url }) => {\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<p>{title}</p>\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GifListItem;\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifListItem from './GifListItem';\r\n\r\nconst GifList = ({ category }) => {\r\n\tconst { data: images, loading } = useFetchGifs(category);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>{category}</h3>\r\n\t\t\t{loading && 'Cargando...'}\r\n\t\t\t<div className=\"card-list animate__animated animate__fadeIn\">\r\n\t\t\t\t{images.map((image) => {\r\n\t\t\t\t\treturn <GifListItem key={image.id} {...image} />;\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifList;\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then((img) => {\r\n\t\t\tsetState({\r\n\t\t\t\tdata: img,\r\n\t\t\t\tloading: false,\r\n\t\t\t});\r\n\t\t});\r\n\t}, [category]);\r\n\r\n\treturn state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifList from './components/GifList';\r\nconst App = () => {\r\n\tconst [categories, setCategories] = useState(['Jojo adventure']);\r\n\r\n\t// const handleAdd = () => {\r\n\t// \tconst serie = 'Inuyasha';\r\n\t// \tsetcategories([...categories, serie]);\r\n\t// };\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<hr />\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t<ul>\r\n\t\t\t\t{categories.map((category) => {\r\n\t\t\t\t\treturn <GifList key={category} category={category} />;\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}